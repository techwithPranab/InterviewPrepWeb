Order,Question,Answer,Category,Tags,Code Example,References
1,"What is a closure in JavaScript?","A closure is a function that has access to variables in its outer (enclosing) scope even after the outer function has returned. This allows the function to 'remember' the environment in which it was created.","Concept","javascript, closures, scope","function outerFunction() {
  const outerVariable = 'I am from outer scope';

  return function innerFunction() {
    console.log(outerVariable); // Can access outerVariable
  };
}","MDN Web Docs, JavaScript.info"
2,"Explain the difference between let and var","let is block-scoped while var is function-scoped. let variables are not hoisted to the top of their block, while var variables are hoisted.","Syntax","javascript, variables, es6","","ES6 Specification"
3,"What is the virtual DOM in React?","The virtual DOM is a lightweight representation of the actual DOM. React uses it to optimize rendering by comparing the virtual DOM with the real DOM and only updating the differences.","Concept","react, virtual-dom, performance","","React Documentation"
4,"How does async/await work in JavaScript?","async/await is syntactic sugar over Promises. The async keyword makes a function return a Promise, and await pauses execution until the Promise resolves.","Concept","javascript, async, promises","async function fetchData() {
  try {
    const response = await fetch('/api/data');
    const data = await response.json();
    return data;
  } catch (error) {
    console.error('Error:', error);
  }
}","MDN Web Docs"
5,"What are React hooks?","React hooks are functions that let you use state and other React features in functional components. They were introduced in React 16.8 as an alternative to class components.","Concept","react, hooks, functional-components","import { useState, useEffect } from 'react';

function Counter() {
  const [count, setCount] = useState(0);

  useEffect(() => {
    document.title = `Count: ${count}`;
  }, [count]);

  return (
    <div>
      <p>Count: {count}</p>
      <button onClick={() => setCount(count + 1)}>Increment</button>
    </div>
  );
}","React Documentation"
